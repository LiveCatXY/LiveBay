---
import FormattedDate from "../components/FormattedDate.astro";
import { type Collection, type Post } from "../utils/content";

interface Props {
  collection: Collection;
  post: Post;
  index: number;
  width?: string;
  height?: string;
  fadeOld?: boolean;
}

const {
  collection,
  post,
  index,
  width = "128px",
  height = "128px",
  fadeOld = false,
} = Astro.props;

const bg = ['none', 'lightyellow', 'yellow', 'greenyellow'][post.data.top];

function border(post: Post) {
  return [
    post.data.level >= 2 ? "border-2 border-double" : "border border-solid",
    post.data.level >= 3
      ? "border-fuchsia-500"
      : post.data.level === 2
        ? "border-orange-500"
        : post.data.level === 1
          ? "border-green-500"
          : "border-blue-200",
  ];
}

function star(post: Post) {
  const bgColor =
    post.data.level >= 3
      ? "bg-fuchsia-500"
      : post.data.level === 2
        ? "bg-orange-500"
        : post.data.level === 1
          ? "bg-green-500"
          : "bg-blue-200";
  return `w-3.5 text-[10px] leading-3 pt-[2px] rounded text-center ${bgColor}`;
}

function isFadePost() {
  if (!fadeOld || post.data.top) return false;
  return Date.now() - post.data.pubDate.getTime() > 3600000 * 2400;
}
---

<a class:list={["post relative", ...border(post), { fading: isFadePost() }]} href={`/${collection}/${post.slug}`}>
    <div class:list={["title", { '!text-fuchsia-500': post.data.level >= 3 }]}>
      {post.data.title}
    </div>
    <p class="date">
      <FormattedDate date={post.data.pubDate} />
      {
        post.data.updatedDate && (
          <>
            <br />
            ‚Üª<FormattedDate date={post.data.updatedDate} />
          </>
        )
      }
    </p>
    <div class="tags text-blue-500">
        {post.data.tags.length > 0 && <div>{post.data.tags.join(" ")}</div>}
    </div>
    <div class="absolute right-[1px] bottom-0 flex flex-col items-end space-x-1">
        {!!post.data.top && <span>üìå</span>}
        {
        !!post.data.level && (
            <div class={star(post)}>{"‚≠êÔ∏è".repeat(post.data.level)}</div>
        )
        }
        <div class="text-gray-400 text-xs">{index}</div>
    </div>
</a>

<style define:vars={{ width, height, bg }}>
  .post {
    width: var(--width);
    height: var(--height);
    padding: 4px;
    margin: 1px;
    box-sizing: border-box;
    background: var(--bg);

    a:hover .title {
      color: rgb(var(--accent));
    }
  }
  .title {
    color: rgb(var(--black));
    line-height: 1.2;
    font-size: 14px;
    display: flex;
    justify-content: space-between;
  }
  .date {
    color: rgb(var(--gray));
    font-size: 10px;
  }
  .tags {
    font-size: 9px;
    position: absolute;
    bottom: 0;
    margin-right: 16px;
  }
  .fading {
    background: #ddd;
    opacity: 0.6;
  }
</style>
