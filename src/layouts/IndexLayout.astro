---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { type ContentEntryMap, getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";

interface Props {
    category: keyof ContentEntryMap;
}

const { category } = Astro.props;

const posts = (await getCollection(category)).sort(
    (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);

const tags = [
    ...posts.reduce(
        (accTags, post) => new Set([...accTags, ...post.data.tags]),
        new Set(),
    ),
];
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
        <style>
            main {
                width: 1250px;
            }
            .posts ul {
                display: flex;
                flex-wrap: wrap;
                list-style-type: none;
                margin: 0;
                padding: 0;
            }
            .posts ul li {
                width: 240px;
                height: 80px;
                border-style: solid;
                border-width: 1px;
                padding: 4px;
                margin: 1px;
                box-sizing: border-box;
            }
            .posts ul li * {
                text-decoration: none;
                transition: 0.2s ease;
            }
            .posts ul li img {
                margin-bottom: 0.5rem;
                border-radius: 12px;
            }
            .posts ul li a {
                display: block;
            }
            .title {
                margin: 0;
                color: rgb(var(--black));
                line-height: 1;
                font-size: large;
                display: flex;
                justify-content: space-between;
            }
            .date {
                margin: 0;
                color: rgb(var(--gray));
                font-size: x-small;
            }
            .tag {
                margin: 0;
                color: rgb(var(--gray));
                font-size: x-small;
            }
            .posts ul li a:hover .title {
                color: rgb(var(--accent));
            }
            .posts ul a:hover img {
                box-shadow: var(--box-shadow);
            }
            @media (max-width: 720px) {
                .posts ul li {
                    width: 100%;
                    height: auto;
                    text-align: center;
                }
            }
        </style>
    </head>
    <body>
        <Header />
        <main>
            <section class="tags">
                <ul class="list-none p-0 m-0 flex flex-wrap text-sm">
                    {
                        tags.map((tag) => (
                            <li class="mr-1 mb-1 bg-gray-200 border-2 rounded">
                                {tag}
                            </li>
                        ))
                    }
                </ul>
            </section>
            <section class="posts">
                <ul>
                    {
                        posts.reverse().map((post, index) => (
                            <li
                                class={
                                    post.data.level >= 3
                                        ? "border-orange-400"
                                        : "border-blue-100"
                                }
                            >
                                <a href={`/${category}/${post.slug}`}>
                                    <h5 class="title">
                                        {post.data.title}
                                        <span class="text-gray-400 text-xs">
                                            {"‚≠êÔ∏è".repeat(post.data.level)}
                                            {posts.length - index}
                                        </span>
                                    </h5>
                                    <p class="date">
                                        <FormattedDate
                                            date={post.data.pubDate}
                                        />
                                    </p>
                                    {post.data.tags && (
                                        <div class="tag">
                                            üè∑ {post.data.tags.join(", ")}
                                        </div>
                                    )}
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </section>
        </main>
        <Footer />
    </body>
</html>
