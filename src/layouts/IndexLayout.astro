---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import FormattedDate from "../components/FormattedDate.astro";
import {
  type Collection,
  type Tag,
  type Level,
  getAll,
} from "../utils/content";

interface Props {
  collection: Collection;
  tag?: Tag;
  level?: Level;
}

const { collection, tag = "All", level = "All" } = Astro.props;
const { posts, tags, levels } = await getAll(collection, tag, level);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      main {
        width: 1250px;
      }
      .posts ul {
        display: flex;
        flex-wrap: wrap;
        list-style-type: none;
        margin: 0;
        padding: 0;
      }
      .posts ul li {
        width: 240px;
        height: 80px;
        padding: 4px;
        margin: 1px;
        box-sizing: border-box;
      }
      .posts ul li * {
        text-decoration: none;
        transition: 0.2s ease;
      }
      .posts ul li img {
        margin-bottom: 0.5rem;
        border-radius: 12px;
      }
      .posts ul li a {
        display: block;
      }
      .title {
        margin: 0;
        color: rgb(var(--black));
        line-height: 1;
        font-size: large;
        display: flex;
        justify-content: space-between;
      }
      .date {
        margin: 0;
        color: rgb(var(--gray));
        font-size: x-small;
      }
      .posts ul li a:hover .title {
        color: rgb(var(--accent));
      }
      .posts ul a:hover img {
        box-shadow: var(--box-shadow);
      }
      @media (max-width: 720px) {
        .posts ul li {
          width: 100%;
          height: auto;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section class="levels">
        <ul class="list-none p-0 m-0 flex flex-wrap">
          {
            levels.map(([lvl, count]) => (
              <li
                class={
                  "mr-1 mb-1 px-1 rounded text-sm " +
                  `${level === lvl ? "bg-blue-300" : "bg-gray-200"}`
                }
              >
                <a
                  href={`/${collection}/filter/${lvl}-${tag ?? "All"}`}
                  class="text-blue-500"
                >
                  {lvl === "All" ? "ÂÖ®ÈÉ®" : "‚≠êÔ∏è".repeat(lvl) || "Êó†"}({count})
                </a>
              </li>
            ))
          }
        </ul>
      </section>
      <section class="tags">
        <ul class="list-none p-0 m-0 flex flex-wrap">
          {
            tags.map(([tg, count]) => (
              <li
                class={
                  "mr-1 mb-1 px-1 rounded text-sm " +
                  `${tag === tg ? "bg-blue-300" : "bg-gray-200"}`
                }
              >
                <a
                  href={`/${collection}/filter/${level ?? "All"}-${tg}`}
                  class="text-blue-500"
                >
                  {tg === "All" ? "ÂÖ®ÈÉ®" : tg}({count})
                </a>
              </li>
            ))
          }
        </ul>
      </section>
      <section class="posts">
        <ul>
          {
            posts.reverse().map((post, index) => (
              <li
                class:list={[
                  "relative",
                  post.data.level >= 2
                    ? "border-2 border-double"
                    : "border border-solid",
                  post.data.level >= 3
                    ? "border-fuchsia-500"
                    : post.data.level === 2
                      ? "border-orange-500"
                      : post.data.level === 1
                        ? "border-green-300"
                        : "border-blue-100",
                ]}
              >
                <a href={`/${collection}/${post.slug}`}>
                  <h5
                    class:list={[
                      "title",
                      post.data.level >= 3 && "!text-fuchsia-500",
                    ]}
                  >
                    {post.data.title}
                  </h5>
                  <p class="date">
                    <FormattedDate date={post.data.pubDate} />
                  </p>
                </a>

                <div class="m-0 text-xs text-blue-500 absolute bottom-0">
                  <span>{"‚≠êÔ∏è".repeat(post.data.level)}</span>
                  {post.data.tags.length > 0 && (
                    <span>üè∑ {post.data.tags.join(", ")}</span>
                  )}
                </div>
                <div class="text-gray-400 text-xs absolute right-1 bottom-0">
                  {posts.length - index}
                </div>
              </li>
            ))
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
